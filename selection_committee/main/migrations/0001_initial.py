# Generated by Django 4.2.2 on 2023-06-14 18:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(error_messages={'unique': 'Обліковий запис с таким email вже існує.'}, max_length=60, unique=True, verbose_name='Електронна скриня')),
                ('full_name', models.CharField(max_length=60, verbose_name='ПІБ')),
                ('city', models.CharField(max_length=20, verbose_name='Місто')),
                ('school', models.CharField(max_length=60, verbose_name='Назва навчального закладу')),
                ('rates', models.ImageField(blank=True, upload_to='static/img', verbose_name='Скан оцінок')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата регістрації')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Останній вхід')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdmissionList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=1)),
                ('firstRate', models.IntegerField(default=0)),
                ('secondRate', models.IntegerField(default=0)),
                ('thirdRate', models.IntegerField(default=0)),
                ('avgRate', models.FloatField(default=0)),
                ('summaryRate', models.FloatField(default=0)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BidState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(max_length=11)),
                ('dean', models.CharField(max_length=30)),
                ('url_slug', models.CharField(max_length=10, unique=True)),
                ('text', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70)),
                ('coefficient1', models.FloatField()),
                ('coefficient2', models.FloatField()),
                ('coefficient3', models.FloatField()),
                ('coefficient4', models.FloatField()),
                ('amount', models.IntegerField()),
                ('budget_amount', models.IntegerField()),
                ('code', models.IntegerField(default=0)),
                ('abit', models.ManyToManyField(related_name='+', to='main.admissionlist', verbose_name='Заявки')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.department', verbose_name='Факультет')),
                ('subject1', models.ManyToManyField(related_name='+', to='main.subject', verbose_name='Перший предмет')),
                ('subject2', models.ManyToManyField(related_name='+', to='main.subject', verbose_name='Другий предмет')),
                ('subject3', models.ManyToManyField(related_name='+', to='main.subject', verbose_name='Третій предмет')),
            ],
        ),
        migrations.AddField(
            model_name='admissionlist',
            name='speciality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.speciality', verbose_name='Спеціальність'),
        ),
        migrations.AddField(
            model_name='admissionlist',
            name='state',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.bidstate', verbose_name='Стан'),
        ),
        migrations.AddField(
            model_name='admissionlist',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.subject'),
        ),
        migrations.AddField(
            model_name='admissionlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Абітурієнт'),
        ),
        migrations.AddField(
            model_name='user',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.region', verbose_name='Область'),
        ),
    ]
